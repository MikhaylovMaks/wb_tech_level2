package main

import "fmt"

func test() (x int) {
	defer func() {
		x++ // именновая переменная увеличивается на 1, после того, как вызвался return
	}()
	x = 1  // именнованному элементу присваевается 1
	return // Выведет 2, так как x именнованная возвращаемая переменная, увелич на 2 из-за defer
}

func anotherTest() int {
	var x int // декларация локальной переменной x
	defer func() {
		x++
	}()
	x = 1    // присваиваем переменной значение 1
	return x // Выведется 1, так как функция с defer никак не влияет на результат
}

// в первом случае defer изменяет сам возвращаемый результат, а во втором только локальную переменную, которая уже не влияет на возвращаемое значение после return

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}
